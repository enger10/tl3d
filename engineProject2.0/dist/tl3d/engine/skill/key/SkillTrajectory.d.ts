import { Object3D } from "../../base/Object3D";
import { SkillKeyVo, SkillTrajectoryTargetKeyVo } from "../vo/SkillKeyVo";
import { Matrix3D } from "../../math/Matrix3D";
import { IBind } from "../../display3D/interfaces/IBind";
import { SkillKey } from "./SkillKey";
import { Vector3D } from "../../math/Vector3D";
import { CombineParticle } from "../../particle/CombineParticle";
import { SkillPath } from "../path/SkillPath";
import { BaseEvent } from "../../events/BaseEvent";
export declare class SkillTrajectory extends SkillKey implements IBind {
    active: Object3D;
    target: Object3D;
    data: SkillTrajectoryTargetKeyVo;
    protected _currentPos: Vector3D;
    rotationMatrix: Matrix3D;
    protected _socketMaxrix: Matrix3D;
    protected _currentTargetPos: Vector3D;
    endParticle: CombineParticle;
    protected path: SkillPath;
    constructor();
    update(t: number): void;
    reset(): void;
    endPlayFun(e?: BaseEvent): void;
    setCurrentPos(): boolean;
    addToRender(): void;
    getSocket(socketName: string, resultMatrix: Matrix3D): void;
    getSunType(): number;
    setInfo(obj: SkillKeyVo): void;
    setPlayData($active: Object3D, $target: Object3D, $removeCallFun: Function, types?: number, $bloodFun?: Function): void;
    destory(): void;
}
